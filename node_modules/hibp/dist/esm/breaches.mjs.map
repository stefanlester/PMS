{"version":3,"file":"breaches.mjs","sources":["../../src/breaches.ts"],"sourcesContent":["import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches all breach events in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<Breach[]>} a Promise which resolves to an array of breach\n * objects (an empty array if no breaches were found), or rejects with an Error\n * @example\n * breaches()\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breaches({ domain: 'adobe.com' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breaches(\n  options: {\n    domain?: string;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {},\n): Promise<Breach[]> {\n  const endpoint = '/breaches?';\n  const params: Array<string> = [];\n  if (options.domain) {\n    params.push(`domain=${encodeURIComponent(options.domain)}`);\n  }\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Breach[]>;\n}\n"],"names":["breaches","options","endpoint","params","domain","push","encodeURIComponent","fetchFromApi","join","baseUrl","userAgent"],"mappings":";;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAsCgBA;MACdC,8EAII;AAEJ,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,MAAM,GAAkB,EAA9B;;AACA,MAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClBD,IAAAA,MAAM,CAACE,IAAP,kBAAsBC,kBAAkB,CAACL,OAAO,CAACG,MAAT,CAAxC;AACD;;AACD,SAAOG,YAAY,WAAIL,QAAJ,SAAeC,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAf,GAAmC;AACpDC,IAAAA,OAAO,EAAER,OAAO,CAACQ,OADmC;AAEpDC,IAAAA,SAAS,EAAET,OAAO,CAACS;AAFiC,GAAnC,CAAnB;AAID;;;;"}