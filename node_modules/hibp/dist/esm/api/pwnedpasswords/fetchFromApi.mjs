import fetch from 'isomorphic-unfetch';
import { BAD_REQUEST } from './responses.mjs';

/**
 * Fetches data from the supplied API endpoint.
 *
 * HTTP status code 200 returns plain text (data found).
 * HTTP status code 400 throws an Error (bad request).
 *
 * @internal
 * @private
 * @param {string} endpoint the API endpoint to query
 * @param {object} [options] a configuration object
 * @param {string} [options.baseUrl] a custom base URL for the
 * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)
 * @param {string} [options.userAgent] a custom string to send as the User-Agent
 * field in the request headers (default: `hibp <version>`)
 * @returns {Promise<string>} a Promise which resolves to the data resulting
 * from the query, or rejects with an Error
 */

function fetchFromApi(endpoint) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$baseUrl = _ref.baseUrl,
      baseUrl = _ref$baseUrl === void 0 ? 'https://api.pwnedpasswords.com' : _ref$baseUrl,
      userAgent = _ref.userAgent;

  var config = Object.assign({}, userAgent ? {
    headers: {
      'User-Agent': userAgent
    }
  } : {});
  var url = "".concat(baseUrl.replace(/\/$/g, '')).concat(endpoint);
  return fetch(url, config).then(function (res) {
    if (res.ok) return res.text();

    if (res.status === BAD_REQUEST.status) {
      return res.text().then(function (text) {
        throw new Error(text);
      });
    }

    throw new Error(res.statusText);
  });
}

export { fetchFromApi };
//# sourceMappingURL=fetchFromApi.mjs.map
