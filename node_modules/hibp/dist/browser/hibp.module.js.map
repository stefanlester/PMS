{"version":3,"file":"hibp.module.js","sources":["../../node_modules/unfetch/dist/unfetch.module.js","../../node_modules/isomorphic-unfetch/browser.js","../../src/api/haveibeenpwned/responses.ts","../../src/api/haveibeenpwned/fetchFromApi.ts","../../src/breach.ts","../../src/breachedAccount.ts","../../src/breaches.ts","../../src/dataClasses.ts","../../src/pasteAccount.ts","../../node_modules/jssha/dist/sha1.mjs","../../src/api/pwnedpasswords/responses.ts","../../src/pwnedPasswordRange.ts","../../src/api/pwnedpasswords/fetchFromApi.ts","../../src/pwnedPassword.ts","../../src/search.ts"],"sourcesContent":["export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","/**\n * Known potential responses from the remote API.\n *\n * Unfortunately, the API does not send a decent human-readable message back\n * with each response, but they are documented on the website:\n * https://haveibeenpwned.com/api/v3#ResponseCodes\n *\n * These objects simply provide a mapping between the HTTP response status code\n * and the corresponding human-readable message so we can throw a more\n * descriptive error for the consumer. (They are also leveraged in our tests.)\n */\n\nimport { ResponseBody } from './types';\n\n/** @internal */\nexport interface HaveIBeenPwnedApiResponse {\n  headers: Map<string, string>;\n  status: number;\n  statusText?: string;\n  body?: ResponseBody;\n}\n\nconst emptyHeaders = new Map<string, string>();\n\n/** @internal */\nexport const OK: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 200,\n};\n\n/** @internal */\nexport const BAD_REQUEST: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 400,\n  statusText:\n    'Bad request â€” the account does not comply with an acceptable format.',\n};\n\n/**\n * This response has unique behavior. For some reason, the API includes an\n * object in the response body for this one, containing a human-readable\n * message. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const UNAUTHORIZED: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 401,\n  body: {\n    statusCode: 401,\n    message: 'Access denied due to missing hibp-api-key.',\n  },\n};\n\n/** @internal */\nexport const FORBIDDEN: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 403,\n  statusText: 'Forbidden - access denied.',\n};\n\n/** @internal */\nexport const BLOCKED: HaveIBeenPwnedApiResponse = {\n  headers: new Map([['cf-ray', 'someRayId']]),\n  status: 403,\n};\n\n/** @internal */\nexport const NOT_FOUND: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 404,\n};\n\n/**\n * This response has unique behavior. For some reason, the API includes an\n * object in the response body for this one, containing a human-readable\n * message. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const TOO_MANY_REQUESTS: HaveIBeenPwnedApiResponse = {\n  headers: emptyHeaders,\n  status: 429,\n  body: {\n    statusCode: 429,\n    message: 'Rate limit is exceeded. Try again in 2 seconds.',\n  },\n};\n","import fetch from 'isomorphic-unfetch';\nimport { name, version } from '../../../package.json';\nimport { ApiData, ErrorData } from './types';\nimport {\n  BAD_REQUEST,\n  UNAUTHORIZED,\n  FORBIDDEN,\n  NOT_FOUND,\n  TOO_MANY_REQUESTS,\n} from './responses';\n\nfunction blockedWithRayId(rayId: string) {\n  return `Request blocked, contact haveibeenpwned.com if this continues (Ray ID: ${rayId})`;\n}\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns an Object (data found).\n * HTTP status code 404 returns null (no data found).\n * HTTP status code 400 throws an Error (bad request).\n * HTTP status code 401 throws an Error (unauthorized).\n * HTTP status code 403 throws an Error (forbidden).\n * HTTP status code 429 throws an Error (too many requests).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<ApiData>} a Promise which resolves to the data resulting\n * from the query (or null for 404 Not Found responses), or rejects with an\n * Error\n */\nexport function fetchFromApi(\n  endpoint: string,\n  /* istanbul ignore next: no need to test default empty object */\n  {\n    apiKey,\n    baseUrl = 'https://haveibeenpwned.com/api/v3',\n    userAgent,\n  }: { apiKey?: string; baseUrl?: string; userAgent?: string } = {},\n): Promise<ApiData> {\n  const headers: Record<string, string> = {};\n\n  if (apiKey) {\n    headers['HIBP-API-Key'] = apiKey;\n  }\n\n  if (userAgent) {\n    headers['User-Agent'] = userAgent;\n  }\n\n  // Provide a default User-Agent when running outside the browser\n  if (!userAgent && typeof navigator === 'undefined') {\n    headers['User-Agent'] = `${name} ${version}`;\n  }\n\n  const config = { headers };\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}`;\n\n  return fetch(url, config).then((res) => {\n    if (res.ok) return res.json();\n\n    switch (res.status) {\n      case BAD_REQUEST.status:\n        throw new Error(BAD_REQUEST.statusText);\n      case UNAUTHORIZED.status:\n        return res.json().then((body: ErrorData) => {\n          throw new Error(body.message);\n        });\n      case FORBIDDEN.status: {\n        const rayId = res.headers.get('cf-ray');\n        if (rayId) {\n          throw new Error(blockedWithRayId(rayId));\n        }\n        throw new Error(FORBIDDEN.statusText);\n      }\n      case NOT_FOUND.status:\n        return null;\n      case TOO_MANY_REQUESTS.status:\n        return res.json().then((body: ErrorData) => {\n          throw new Error(body.message);\n        });\n      default:\n        throw new Error(res.statusText);\n    }\n  });\n}\n","import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * An object representing a breach.\n *\n * @typedef {object} Breach\n * @property {string} Name\n * @property {string} Title\n * @property {string} Domain\n * @property {string} BreachDate\n * @property {string} AddedDate\n * @property {string} ModifiedDate\n * @property {number} PwnCount\n * @property {string} Description\n * @property {string} LogoPath\n * @property {string[]} DataClasses\n * @property {boolean} IsVerified\n * @property {boolean} IsFabricated\n * @property {boolean} IsSensitive\n * @property {boolean} IsRetired\n * @property {boolean} IsSpamList\n */\n\n/**\n * Fetches data for a specific breach event.\n *\n * @param {string} breachName the name of a breach in the system\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach>|Promise<null>)} a Promise which resolves to an\n * object representing a breach (or null if no breach was found), or rejects\n * with an Error\n * @example\n * breach('Adobe')\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breach(\n  breachName: string,\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<Breach | null> {\n  return fetchFromApi(\n    `/breach/${encodeURIComponent(breachName)}`,\n    options,\n  ) as Promise<Breach | null>;\n}\n","import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches breach data for a specific account.\n *\n * ***Warning (July 18, 2019):***\n *\n * `haveibeenpwned.com` now requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it (that is, without specifying a `baseUrl` to a proxy that inserts a\n * valid API key on your behalf) will fail.\n *\n * @param {string} account a username or email address\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {boolean} [options.includeUnverified] include \"unverified\" breaches in\n * the results (default: true)\n * @param {boolean} [options.truncate] truncate the results to only include\n * the name of each breach (default: true)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach[]> | Promise<null>)} a Promise which resolves to an\n * array of breach objects (or null if no breaches were found), or rejects with\n * an Error\n * @example\n * breachedAccount('foo', { apiKey: 'my-api-key' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breachedAccount('bar', {\n *   includeUnverified: false,\n *   baseUrl: 'https://my-hibp-proxy:8080',\n * })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breachedAccount('baz', {\n *   apiKey: 'my-api-key',\n *   domain: 'adobe.com',\n *   truncate: false,\n *   userAgent: 'my-app 1.0'\n * })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breachedAccount(\n  account: string,\n  options: {\n    apiKey?: string;\n    domain?: string;\n    includeUnverified?: boolean;\n    truncate?: boolean;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {\n    includeUnverified: true,\n    truncate: true,\n  },\n): Promise<Breach[] | null> {\n  const endpoint = `/breachedaccount/${encodeURIComponent(account)}?`;\n  const params: Array<string> = [];\n  if (options.domain) {\n    params.push(`domain=${encodeURIComponent(options.domain)}`);\n  }\n  if (options.includeUnverified === false) {\n    params.push('includeUnverified=false');\n  }\n  if (options.truncate === false) {\n    params.push('truncateResponse=false');\n  }\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    apiKey: options.apiKey,\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Breach[] | null>;\n}\n","import { Breach } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches all breach events in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<Breach[]>} a Promise which resolves to an array of breach\n * objects (an empty array if no breaches were found), or rejects with an Error\n * @example\n * breaches()\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * breaches({ domain: 'adobe.com' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function breaches(\n  options: {\n    domain?: string;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {},\n): Promise<Breach[]> {\n  const endpoint = '/breaches?';\n  const params: Array<string> = [];\n  if (options.domain) {\n    params.push(`domain=${encodeURIComponent(options.domain)}`);\n  }\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Breach[]>;\n}\n","import { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * Fetches all data classes in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<string[]> | Promise<null>)} a Promise which resolves to an\n * array of strings (or null if no data classes were found), or rejects with an\n * Error\n * @example\n * dataClasses()\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function dataClasses(\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<string[] | null> {\n  return fetchFromApi('/dataclasses', options) as Promise<string[] | null>;\n}\n","import { Paste } from './api/haveibeenpwned/types';\nimport { fetchFromApi } from './api/haveibeenpwned';\n\n/**\n * An object representing a paste.\n *\n * @typedef {object} Paste\n * @property {string} Id\n * @property {string} Source\n * @property {string} Title\n * @property {string} Date\n * @property {number} EmailCount\n */\n\n/**\n * Fetches paste data for a specific account (email address).\n *\n * ***Warning (July 18, 2019):***\n *\n * `haveibeenpwned.com` now requires an API key from\n * https://haveibeenpwned.com/API/Key for the `pasteaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it (that is, without specifying a `baseUrl` to a proxy that inserts a\n * valid API key on your behalf) will fail.\n *\n * @param {string} email the email address to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Paste[]> | Promise<null>)} a Promise which resolves to an\n * array of paste objects (or null if no pastes were found), or rejects with an\n * Error\n * @example\n * pasteAccount('foo@bar.com', { apiKey: 'my-api-key' })\n *   .then(data => {\n *     if (data) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n */\nexport function pasteAccount(\n  email: string,\n  options: { apiKey?: string; baseUrl?: string; userAgent?: string } = {},\n): Promise<Paste[] | null> {\n  return fetchFromApi(`/pasteaccount/${encodeURIComponent(email)}`, {\n    apiKey: options.apiKey,\n    baseUrl: options.baseUrl,\n    userAgent: options.userAgent,\n  }) as Promise<Paste[] | null>;\n}\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function r(t,r,n,i){let e,s,o;const h=r||[0],u=(n=n||0)>>>3,f=-1===i?3:0;for(e=0;e<t.length;e+=1)o=e+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[e]<<8*(f+i*(o%4));return{value:h,binLen:8*t.length+n}}function n(n,i,e){switch(i){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(n){case\"HEX\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(e=0;e<t.length;e+=2){if(s=parseInt(t.substr(e,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(e>>>1)+f,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+i*(h%4))}return{value:u,binLen:4*t.length+n}}(t,r,n,e)};case\"TEXT\":return function(t,r,n){return function(t,r,n,i,e){let s,o,h,u,f,c,a,w,E=0;const l=n||[0],A=(i=i||0)>>>3;if(\"UTF8\"===r)for(a=-1===e?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=o[u]<<8*(a+e*(c%4)),E+=1}else for(a=-1===e?2:0,w=\"UTF16LE\"===r&&1!==e||\"UTF16LE\"!==r&&1===e,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===w&&(u=255&s,s=u<<8|s>>>8),c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=s<<8*(a+e*(c%4)),E+=2}return{value:l,binLen:8*E+i}}(t,i,r,n,e)};case\"B64\":return function(r,n,i){return function(r,n,i,e){let s,o,h,u,f,c,a,w=0;const E=n||[0],l=(i=i||0)>>>3,A=-1===e?3:0,p=r.indexOf(\"=\");if(-1===r.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(r=r.replace(/=/g,\"\"),-1!==p&&p<r.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<r.length;o+=4){for(f=r.substr(o,4),u=0,h=0;h<f.length;h+=1)s=t.indexOf(f.charAt(h)),u|=s<<18-6*h;for(h=0;h<f.length-1;h+=1){for(a=w+l,c=a>>>2;E.length<=c;)E.push(0);E[c]|=(u>>>16-8*h&255)<<8*(A+e*(a%4)),w+=1}}return{value:E,binLen:8*w+i}}(r,n,i,e)};case\"BYTES\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(s=0;s<t.length;s+=1)e=t.charCodeAt(s),h=s+f,o=h>>>2,u.length<=o&&u.push(0),u[o]|=e<<8*(c+i*(h%4));return{value:u,binLen:8*t.length+n}}(t,r,n,e)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t,n,i){return function(t,n,i,e){return r(new Uint8Array(t),n,i,e)}(t,n,i,e)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t,n,i){return r(t,n,i,e)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function i(r,n,i,e){switch(r){case\"HEX\":return function(t){return function(t,r,n,i){let e,s,o=\"\";const h=r/8,u=-1===n?3:0;for(e=0;e<h;e+=1)s=t[e>>>2]>>>8*(u+n*(e%4)),o+=\"0123456789abcdef\".charAt(s>>>4&15)+\"0123456789abcdef\".charAt(15&s);return i.outputUpper?o.toUpperCase():o}(t,n,i,e)};case\"B64\":return function(r){return function(r,n,i,e){let s,o,h,u,f,c=\"\";const a=n/8,w=-1===i?3:0;for(s=0;s<a;s+=3)for(u=s+1<a?r[s+1>>>2]:0,f=s+2<a?r[s+2>>>2]:0,h=(r[s>>>2]>>>8*(w+i*(s%4))&255)<<16|(u>>>8*(w+i*((s+1)%4))&255)<<8|f>>>8*(w+i*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=n?t.charAt(h>>>6*(3-o)&63):e.b64Pad;return c}(r,n,i,e)};case\"BYTES\":return function(t){return function(t,r,n){let i,e,s=\"\";const o=r/8,h=-1===n?3:0;for(i=0;i<o;i+=1)e=t[i>>>2]>>>8*(h+n*(i%4))&255,s+=String.fromCharCode(e);return s}(t,n,i)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t){return function(t,r,n){let i;const e=r/8,s=new ArrayBuffer(e),o=new Uint8Array(s),h=-1===n?3:0;for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(h+n*(i%4))&255;return s}(t,n,i)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t){return function(t,r,n){let i;const e=r/8,s=-1===n?3:0,o=new Uint8Array(e);for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(s+n*(i%4))&255;return o}(t,n,i)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function e(t){const r={outputUpper:!1,b64Pad:\"=\",outputLen:-1},n=t||{},i=\"Output length must be a multiple of 8\";if(r.outputUpper=n.outputUpper||!1,n.b64Pad&&(r.b64Pad=n.b64Pad),n.outputLen){if(n.outputLen%8!=0)throw new Error(i);r.outputLen=n.outputLen}else if(n.shakeLen){if(n.shakeLen%8!=0)throw new Error(i);r.outputLen=n.shakeLen}if(\"boolean\"!=typeof r.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof r.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return r}function s(t,r){return t<<r|t>>>32-r}function o(t,r,n){return t^r^n}function h(t,r,n){return t&r^t&n^r&n}function u(t,r){const n=(65535&t)+(65535&r);return(65535&(t>>>16)+(r>>>16)+(n>>>16))<<16|65535&n}function f(t,r,n,i,e){const s=(65535&t)+(65535&r)+(65535&n)+(65535&i)+(65535&e);return(65535&(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16)+(e>>>16)+(s>>>16))<<16|65535&s}function c(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function a(t,r){let n,i,e,c,a,w,E;const l=[];for(n=r[0],i=r[1],e=r[2],c=r[3],a=r[4],E=0;E<80;E+=1)l[E]=E<16?t[E]:s(l[E-3]^l[E-8]^l[E-14]^l[E-16],1),w=E<20?f(s(n,5),(A=i)&e^~A&c,a,1518500249,l[E]):E<40?f(s(n,5),o(i,e,c),a,1859775393,l[E]):E<60?f(s(n,5),h(i,e,c),a,2400959708,l[E]):f(s(n,5),o(i,e,c),a,3395469782,l[E]),a=c,c=e,e=s(i,30),i=n,n=w;var A;return r[0]=u(n,r[0]),r[1]=u(i,r[1]),r[2]=u(e,r[2]),r[3]=u(c,r[3]),r[4]=u(a,r[4]),r}function w(t,r,n,i){let e;const s=15+(r+65>>>9<<4),o=r+n;for(;t.length<=s;)t.push(0);for(t[r>>>5]|=128<<24-r%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,e=0;e<t.length;e+=16)i=a(t.slice(e,e+16),i);return i}export default class extends class{constructor(t,r,n){const i=n||{};if(this.t=r,this.i=i.encoding||\"UTF8\",this.numRounds=i.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.s=t,this.o=[],this.h=0,this.u=!1,this.l=0,this.A=!1,this.p=[],this.R=[]}update(t){let r,n=0;const i=this.U>>>5,e=this.T(t,this.o,this.h),s=e.binLen,o=e.value,h=s>>>5;for(r=0;r<h;r+=i)n+this.U<=s&&(this.F=this.m(o.slice(r,r+i),this.F),n+=this.U);this.l+=n,this.o=o.slice(n>>>5),this.h=s%this.U,this.u=!0}getHash(t,r){let n,s,o=this.g;const h=e(r);if(this.B){if(-1===h.outputLen)throw new Error(\"Output length must be specified in options\");o=h.outputLen}const u=i(t,o,this.v,h);if(this.A&&this.Y)return u(this.Y(h));for(s=this.H(this.o.slice(),this.h,this.l,this.C(this.F),o),n=1;n<this.numRounds;n+=1)this.B&&o%32!=0&&(s[s.length-1]&=16777215>>>24-o%32),s=this.H(s,o,0,this.I(this.s),o);return u(s)}setHMACKey(t,r,i){if(!this.L)throw new Error(\"Variant does not support HMAC\");if(this.u)throw new Error(\"Cannot set MAC key after calling update\");const e=n(r,(i||{}).encoding||\"UTF8\",this.v);this.M(e(t))}M(t){const r=this.U>>>3,n=r/4-1;let i;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.A)throw new Error(\"MAC key already set\");for(r<t.binLen/8&&(t.value=this.H(t.value,t.binLen,0,this.I(this.s),this.g));t.value.length<=n;)t.value.push(0);for(i=0;i<=n;i+=1)this.p[i]=909522486^t.value[i],this.R[i]=1549556828^t.value[i];this.F=this.m(this.p,this.F),this.l=this.U,this.A=!0}getHMAC(t,r){const n=e(r);return i(t,this.g,this.v,n)(this.N())}N(){let t;if(!this.A)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const r=this.H(this.o.slice(),this.h,this.l,this.C(this.F),this.g);return t=this.m(this.R,this.I(this.s)),t=this.H(r,this.g,this.U,t,this.g),t}}{constructor(t,r,i){if(\"SHA-1\"!==t)throw new Error(\"Chosen SHA variant is not supported\");super(t,r,i);const e=i||{};this.L=!0,this.Y=this.N,this.v=-1,this.T=n(this.t,this.i,this.v),this.m=a,this.C=function(t){return t.slice()},this.I=c,this.H=w,this.F=[1732584193,4023233417,2562383102,271733878,3285377520],this.U=512,this.g=160,this.B=!1,e.hmacKey&&this.M(function(t,r,i,e){const s=t+\" must include a value and format\";if(!r){if(!e)throw new Error(s);return e}if(void 0===r.value||!r.format)throw new Error(s);return n(r.format,r.encoding||\"UTF8\",i)(r.value)}(\"hmacKey\",e.hmacKey,this.v))}}\n","/**\n * Known potential responses from the remote API.\n *\n * https://haveibeenpwned.com/api/v3#PwnedPasswords\n *\n */\n\n/** @internal */\nexport interface PwnedPasswordsApiResponse {\n  status: number;\n  body?: string;\n}\n\n/** @internal */\nexport const OK: PwnedPasswordsApiResponse = {\n  status: 200,\n};\n\n/** @internal */\nexport const BAD_REQUEST: PwnedPasswordsApiResponse = {\n  status: 400,\n  body: 'The hash prefix was not in a valid format',\n};\n","import { fetchFromApi } from './api/pwnedpasswords';\n\nexport interface PwnedPasswordSuffix {\n  suffix: string;\n  count: number;\n}\n\n/**\n * An object representing an exposed password hash suffix (corresponding to a\n * given hash prefix) and how many times it occurred in the Pwned Passwords\n * repository.\n *\n * @typedef {object} PwnedPasswordSuffix\n * @property {string} suffix\n * @property {number} count\n */\n\n/**\n * Fetches the SHA-1 hash suffixes for the given 5-character SHA-1 hash prefix.\n *\n * When a password hash with the same first 5 characters is found in the Pwned\n * Passwords repository, the API will respond with an HTTP 200 and include the\n * suffix of every hash beginning with the specified prefix, followed by a count\n * of how many times it appears in the data set. This function parses the\n * response and returns a more structured format.\n *\n * @param {string} prefix the first 5 characters of a SHA-1 password hash (case\n * insensitive)\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<PwnedPasswordSuffix[]>} a Promise which resolves to an\n * array of objects, each containing the `suffix` that when matched with the\n * prefix composes the complete hash, and a `count` of how many times it appears\n * in the breached password data set, or rejects with an Error\n *\n * @example\n * pwnedPasswordRange('5BAA6')\n *   .then(results => {\n *     // results will have the following shape:\n *     // [\n *     //   { suffix: \"003D68EB55068C33ACE09247EE4C639306B\", count: 3 },\n *     //   { suffix: \"012C192B2F16F82EA0EB9EF18D9D539B0DD\", count: 1 },\n *     //   ...\n *     // ]\n *   })\n * @example\n * const suffix = '1E4C9B93F3F0682250B6CF8331B7EE68FD8';\n * pwnedPasswordRange('5BAA6')\n *   // filter to matching suffix\n *   .then(results => results.filter(row => row.suffix === suffix))\n *   // return count if match, 0 if not\n *   .then(results => (results[0] ? results[0].count : 0))\n *   .catch(err => {\n *     // ...\n *   });\n * @see https://haveibeenpwned.com/api/v3#SearchingPwnedPasswordsByRange\n */\nexport function pwnedPasswordRange(\n  prefix: string,\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<PwnedPasswordSuffix[]> {\n  return (\n    fetchFromApi(`/range/${encodeURIComponent(prefix)}`, options)\n      // create array from lines of text in response body\n      .then((data) => data.split('\\n'))\n      // convert into array of objects containing suffix and count for each line\n      .then((results) =>\n        results.map((row) => ({\n          suffix: row.split(':')[0],\n          count: parseInt(row.split(':')[1], 10),\n        })),\n      )\n  );\n}\n","import fetch from 'isomorphic-unfetch';\nimport { BAD_REQUEST } from './responses';\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns plain text (data found).\n * HTTP status code 400 throws an Error (bad request).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<string>} a Promise which resolves to the data resulting\n * from the query, or rejects with an Error\n */\nexport function fetchFromApi(\n  endpoint: string,\n  /* istanbul ignore next: no need to test default empty object */\n  {\n    baseUrl = 'https://api.pwnedpasswords.com',\n    userAgent,\n  }: { baseUrl?: string; userAgent?: string } = {},\n): Promise<string> {\n  const config = Object.assign(\n    {},\n    userAgent\n      ? {\n          headers: {\n            'User-Agent': userAgent,\n          },\n        }\n      : {},\n  );\n\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}`;\n\n  return fetch(url, config).then((res) => {\n    if (res.ok) return res.text();\n\n    if (res.status === BAD_REQUEST.status) {\n      return res.text().then((text) => {\n        throw new Error(text);\n      });\n    }\n\n    throw new Error(res.statusText);\n  });\n}\n","import JSSHA from 'jssha/dist/sha1';\nimport { pwnedPasswordRange } from './pwnedPasswordRange';\n\n/**\n * Fetches the number of times the the given password has been exposed in a\n * breach (0 indicating no exposure). The password is given in plain text, but\n * only the first 5 characters of its SHA-1 hash will be submitted to the API.\n *\n * @param {string} password a password in plain text\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<number>} a Promise which resolves to the number of times\n * the password has been exposed in a breach, or rejects with an Error\n * @example\n * pwnedPassword('f00b4r')\n *   .then(numPwns => {\n *     // truthy check or numeric condition\n *     if (numPwns) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @see https://haveibeenpwned.com/api/v3#PwnedPasswords\n */\nexport function pwnedPassword(\n  password: string,\n  options: { baseUrl?: string; userAgent?: string } = {},\n): Promise<number> {\n  const sha1 = new JSSHA('SHA-1', 'TEXT');\n  sha1.update(password);\n  const hash = sha1.getHash('HEX', { outputUpper: true });\n  const prefix = hash.slice(0, 5);\n  const suffix = hash.slice(5);\n\n  return (\n    pwnedPasswordRange(prefix, options)\n      // filter to matching suffix\n      .then((arr) => arr.filter((item) => item.suffix === suffix))\n      // return count if match, 0 if not\n      .then((arr) => (arr[0] ? arr[0].count : 0))\n  );\n}\n","import { Breach, Paste } from './api/haveibeenpwned/types';\nimport { breachedAccount } from './breachedAccount';\nimport { pasteAccount } from './pasteAccount';\n\nexport interface SearchResults {\n  breaches: Breach[] | null;\n  pastes: Paste[] | null;\n}\n\n/**\n * An object representing search results.\n *\n * @typedef {object} SearchResults\n * @property {(Breach[] | null)} breaches\n * @property {(Paste[] | null)} pastes\n */\n\n/**\n * Fetches all breaches and all pastes associated with the provided account\n * (email address or username). Note that the remote API does not support\n * querying pastes by username (only email addresses), so in the event the\n * provided account is not a valid email address, only breach data is queried\n * and the \"pastes\" field of the resulting object will always be null. This is\n * exactly how searching via the current web interface behaves, which this\n * convenience method is designed to mimic.\n *\n * ***Warning (July 18, 2019):***\n *\n * `haveibeenpwned.com` now requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` and\n * `pasteaccount` endpoints. The  `apiKey` option here is not explicitly\n * required, but direct requests made without it (that is, without specifying a\n * `baseUrl` to a proxy that inserts a valid API key on your behalf) will fail.\n *\n * @param {string} account an email address or username\n * @param {object} [breachOptions] a configuration object pertaining to breach\n * queries\n * @param {string} [breachOptions.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [breachOptions.domain] a domain by which to filter the\n * results (default: all domains)\n * @param {boolean} [breachOptions.truncate] truncate the results to only\n * include the name of each breach (default: true)\n * @param {string} [breachOptions.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [breachOptions.userAgent] a custom string to send as the\n * User-Agent field in the request headers (default: `hibp <version>`)\n * @returns {Promise<SearchResults>} a Promise which resolves to an object\n * containing a \"breaches\" key (which can be null or an array of breach objects)\n * and a \"pastes\" key (which can be null or an array of paste objects), or\n * rejects with an Error\n * @example\n * search('foo', { apiKey: 'my-api-key' })\n *   .then(data => {\n *     if (data.breaches || data.pastes) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n * @example\n * search('nobody@nowhere.com', { apiKey: 'my-api-key', truncate: false })\n *   .then(data => {\n *     if (data.breaches || data.pastes) {\n *       // ...\n *     } else {\n *       // ...\n *     }\n *   })\n *   .catch(err => {\n *     // ...\n *   });\n *\n * @see https://haveibeenpwned.com/\n */\nexport function search(\n  account: string,\n  breachOptions: {\n    apiKey?: string;\n    domain?: string;\n    truncate?: boolean;\n    baseUrl?: string;\n    userAgent?: string;\n  } = {\n    truncate: true,\n  },\n): Promise<SearchResults> {\n  const { apiKey, baseUrl, userAgent } = breachOptions;\n\n  return Promise.all([\n    breachedAccount(account, breachOptions),\n    // This email regex is garbage but it seems to be what the API uses:\n    /^.+@.+$/.test(account)\n      ? pasteAccount(account, { apiKey, baseUrl, userAgent })\n      : null,\n  ]).then(\n    // Avoid array destructuring here to prevent need for Babel helpers\n    (promises) => ({\n      breaches: promises[0],\n      pastes: promises[1],\n    }),\n  );\n}\n"],"names":["e","n","Promise","t","r","s","XMLHttpRequest","o","u","i","a","ok","status","statusText","url","responseURL","text","resolve","responseText","json","then","JSON","parse","blob","Blob","response","clone","headers","keys","entries","get","toLowerCase","has","l","open","method","onload","getAllResponseHeaders","replace","push","onerror","withCredentials","credentials","setRequestHeader","send","body","self","fetch","require$$0","default","Map","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","TOO_MANY_REQUESTS","fetchFromApi","endpoint","apiKey","baseUrl","userAgent","navigator","config","res","Error","message","rayId","blockedWithRayId","breach","breachName","options","encodeURIComponent","breachedAccount","account","includeUnverified","truncate","params","domain","join","breaches","dataClasses","pasteAccount","email","h","f","length","value","binLen","c","parseInt","substr","isNaN","w","E","A","charCodeAt","p","indexOf","search","charAt","ArrayBuffer","Uint8Array","outputUpper","toUpperCase","b64Pad","String","fromCharCode","outputLen","shakeLen","slice","[object Object]","this","encoding","numRounds","R","U","T","F","m","g","B","v","Y","H","C","I","L","M","N","super","hmacKey","format","pwnedPasswordRange","prefix","Object","assign","User-Agent","data","split","results","map","row","suffix","count","pwnedPassword","password","sha1","JSSHA","update","hash","getHash","arr","filter","item","breachOptions","all","test","promises","pastes"],"mappings":"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"}